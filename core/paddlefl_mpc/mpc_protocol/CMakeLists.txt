set(PROTO_SRCS
    "./aby3_protocol.cc"
    "./network/mesh_network.cc"
    "./network/network_factory.cc"
    "./mpc_config_parameters.cc"
    "./context_holder.cc"
    "./mpc_instance.cc"
    "./mpc_protocol_factory.cc"
    "./aby3_operators_impl/elementwise_op.cc"
    "./aby3_operators_impl/common.cc"
    "./aby3_operators_impl/matrix_op.cc"
    "./privc_protocol.cc"
    "./privc_operators_impl/elementwise_op.cc"
    "./privc_operators_impl/matrix_op.cc"
)

if (WITH_GPRC)
    list(APPEND PROTO_SRCS "./network/mesh_network_grpc.cc")
    set(GRPC_DEPS grpc++_unsecure grpc_unsecure gpr zlib protobuf)
    grpc_library(transport_o SRCS ${PROTO_SRCS} PROTO ./network/protos/transport.proto DEPS ${GRPC_DEPS})

    # generated by proto
    set(grpc_grpc_srcs "${CMAKE_CURRENT_BINARY_DIR}/transport.grpc.pb.cc")
    set(grpc_proto_srcs "${CMAKE_CURRENT_BINARY_DIR}/transport.pb.cc")
endif()

add_library(mpc_protocol_o OBJECT ${PROTO_SRCS} ${grpc_grpc_srcs} ${grpc_proto_srcs})
if (WITH_GRPC)
    add_dependencies(mpc_protocol_o gloo hiredis gmp grpc++ fluid_framework)
else()
    add_dependencies(mpc_protocol_o gloo hiredis gmp fluid_framework)
endif()

add_library(mpc_protocol STATIC $<TARGET_OBJECTS:mpc_protocol_o>)
target_link_libraries(mpc_protocol ${GRPC_DEPS} gloo hiredis privc3 privc_o fluid_framework)

cc_test(mesh_network_test SRCS network/mesh_network_test.cc DEPS mpc_protocol)
if (WITH_GPRC)
    cc_test(mesh_network_grpc_test SRCS network/mesh_network_grpc_test.cc DEPS mpc_protocol)
endif()
cc_test(mpc_protocol_test SRCS mpc_protocol_test.cc DEPS mpc_protocol privc)
cc_test(mpc_instance_test SRCS mpc_instance_test.cc DEPS mpc_protocol privc)


